#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers
# Load common variables for all scripts.
source _variables

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
infcloud=$YNH_APP_ARG_INFCLOUD
language=$YNH_APP_ARG_LANGUAGE

app=$YNH_APP_INSTANCE_NAME

version=$(grep '\"version\": ' ../manifest.json | cut -d '"' -f 4)	# Retrieve the version number in the manifest file.


#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Check web path availability
ynh_webpath_available $domain $path_url
# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app infcloud $infcloud
ynh_app_setting_set $app version $version

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies $app_depencencies

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_add_nginx_config
if [ "$path_url" = "/" ]
then
	ynh_replace_string "__PATH_NO_ROOT__" "" /etc/nginx/conf.d/$domain.d/$app.conf
else
	ynh_replace_string "__PATH_NO_ROOT__" "$path_url" /etc/nginx/conf.d/$domain.d/$app.conf
fi
if [ $infcloud -eq 1 ]
then	# Ajoute InfCloud dans la config Nginx
	ynh_replace_string "#INFCLOUD#" "" /etc/nginx/conf.d/$domain.d/$app.conf
fi
ynh_store_file_checksum "$finalnginxconf"

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Créer un utilisateur système dédié à l'app

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL RADICALE IN A VIRTUALENV
#=================================================

# Init virtualenv
virtualenv /opt/yunohost/$app
/opt/yunohost/$app/bin/pip install radicale==$version python-ldap

#=================================================
# COPY FILES INTO $FINAL_PATH
#=================================================

# Crée le repertoire de destination et stocke son emplacement.
mkdir "$final_path"
ynh_app_setting_set $app final_path $final_path

# Copy files to the right place
mkdir -p $final_path/collections
cp ../conf/radicale.wsgi $final_path
# Copie les fichiers additionnels ou modifiés.
cp -a ../sources/extra_files_radicale/. "$final_path"
# Le fichier regex.py est patché pour corrigé le commit destructeur e807c3d35bea9cfcfcacac83b1b17d748ea15a39 du 3/12/2015 qui arrête la lecture du fichier rights à la première occurence validée.
mv "$final_path/regex.py" /opt/yunohost/$app/lib/python*/site-packages/radicale/rights/regex.py
ynh_secure_remove "/opt/yunohost/$app/lib/python*/site-packages/radicale/rights/regex.pyc"
if [ $infcloud -eq 1 ]
then	#Instal InfCloud
	final_path_backup=$final_path	# Sauvegarde le contenu de $final_path
	final_path=$final_path/infcloud	# Change final_path pour l'installation de infcloud
	ynh_setup_source "$final_path"	# Télécharge la source, décompresse et copie dans $final_path
	final_path=$final_path_backup	# Restaure le contenu de $final_path
fi

#=================================================
# CONFIGURE RADICALE
#=================================================

mkdir -p /etc/$app
cp ../conf/config /etc/$app/
cp ../conf/logging /etc/$app/
cp ../conf/rights /etc/$app/
ynh_replace_string "__PATH__" "$path_url" /etc/$app/config
ynh_replace_string "__FINALPATH__" "$final_path" /etc/$app/config
ynh_store_file_checksum "/etc/$app/config"	# Enregistre la somme de contrôle du fichier de config
ynh_store_file_checksum "/etc/$app/logging"	# Enregistre la somme de contrôle du fichier de config
if [ $infcloud -eq 1 ]
then	#Configuration InfCloud
	# Détermine la langue
	case "$language" in
		"Czech") language="cs_CZ"
		;;
		"Danish") language="da_DK"
		;;
		"German") language="de_DE"
		;;
		"English/US") language="en_US"
		;;
		"Spanish") language="es_ES"
		;;
		"French") language="fr_FR"
		;;
		"Italian") language="it_IT"
		;;
		"Japan") language="ja_JP"
		;;
		"Hungarian") language="hu_HU"
		;;
		"Dutch") language="nl_NL"
		;;
		"Slovak") language="sk_SK"
		;;
		"Turkish") language="tr_TR"
		;;
		"Russian") language="ru_RU"
		;;
		"Ukrainian") language="uk_UA"
		;;
		"Chinese") language="zh_CN"
		;;
	esac
	ynh_app_setting_set $app language $language
	cp ../conf/config.js "$final_path/infcloud/"
	ynh_replace_string "__DOMAIN__" "$domain" "$final_path/infcloud/config.js"
	ynh_replace_string "__PATH__" "$path_url" "$final_path/infcloud/config.js"
	ynh_replace_string "__LANG__" "$language" "$final_path/infcloud/config.js"
	ynh_replace_string "__ADMIN__" "$admin" "$final_path/infcloud/config.js"
	ynh_replace_string "__TIMEZONE__" "$(cat /etc/timezone)" "$final_path/infcloud/config.js"
	ynh_store_file_checksum "$final_path/infcloud/config.js"	# Enregistre la somme de contrôle du fichier de config
fi

#=================================================
# SET PERMISSIONS ON RADICALE'S DIRECTORIES
#=================================================

# useradd radicale -d /opt/yunohost/$app
chown radicale: -R /opt/yunohost/$app

chown -R radicale: $final_path
mkdir -p /var/log/$app
touch /var/log/$app/$app.log
chown radicale -R /var/log/$app
# Droit par défaut des dossiers de collections utilisateurs, tels qu'ils sont créés par radicale.
chmod 666 -R $final_path/default_collections
chmod 777 $final_path/default_collections $final_path/default_collections/USER

# Fix permission
chmod 755 /etc/$app/
find /opt/yunohost/$app/ -type d -exec chmod 2755 {} \;
find /opt/yunohost/$app/ -type f -exec chmod g+r,o+r {} \;
chmod 644 /etc/$app/*

#=================================================
# CONFIGURE UWSGI FOR RADICALE
#=================================================

cp ../conf/radicale.ini /etc/uwsgi/apps-available/
ln -s /etc/uwsgi/apps-available/radicale.ini /etc/uwsgi/apps-enabled/

#=================================================
# GENERATE CALENDARS AND ADDRESS BOOKS FOR ALL USERS
#=================================================

# Créer les calendriers et carnets d'adresses par défaut des utilisateurs.
while read user	#USER en majuscule est une variable système, à éviter.
do
		cp -a $final_path/default_collections/USER $final_path/collections/$user
		cp -a $final_path/default_collections/USER.props $final_path/collections/$user.props
done <<< "$(yunohost user list | grep username | cut -d ":" -f 2 | cut -c 2-)"	# Liste les utilisateurs et supprime l'espace après username:
# Le triple chevron <<< permet de prendre la sortie de commande en entrée de boucle.

#=================================================
# ENABLE UWSGI SERVICE IN ADMIN PANEL
#=================================================

systemctl restart uwsgi
# Ajoute le service au monitoring de Yunohost.
yunohost service add uwsgi --log "/var/log/uwsgi/app/radicale.log"

#=================================================
# PREPARE THE HOOKS
#=================================================

# Modification des hook pour la création des collections par défaut des nouveaux utilisateurs. Et leur suppression
ynh_replace_string "__FINALPATH__" "$final_path" ../hooks/post_user_create
ynh_replace_string "__FINALPATH__" "$final_path" ../hooks/post_user_delete

#=================================================
# GENERIC FINALISATION
#=================================================
# SETUP SSOWAT
#=================================================

if [ $infcloud -eq 1 ]
then	# /infcloud vient se rajouter à l'adresse de radicale pour y être associé sur le portail.
	ynh_app_setting_set $app path $path_url/infcloud	# Remplace radicale par InfCloud dans le portail Yunohost
	ynh_app_setting_set $app protected_uris "/"	# Protège l'accès à infcloud
	domain_regex=$(echo "$domain" | sed 's@-@.@g')
	ynh_app_setting_set $app skipped_regex "$domain_regex$path_url"	# Radicale est accessible librement (pour l'accès distant aux ressources)
else	# Si seul radicale est installé.
	ynh_app_setting_set $app unprotected_uris "/"	# Radicale est accessible librement (pour l'accès distant aux ressources)
fi

#=================================================
# SETUP LOGROTATE
#=================================================

ynh_use_logrotate

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

if [ $infcloud -eq 1 ]
then
	ynh_add_fpm_config	# Créer le fichier de configuration du pool php-fpm et le configure.
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
