#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
admin=$(ynh_app_setting_get $app admin)
infcloud=$(ynh_app_setting_get $app infcloud)
language=$(ynh_app_setting_get $app language)
final_path=$(ynh_app_setting_get $app final_path)
version=$(ynh_app_setting_get $app version)
overwrite_logging=$(ynh_app_setting_get $app overwrite_logging)
overwrite_config=$(ynh_app_setting_get $app overwrite_config)
overwrite_infcloud=$(ynh_app_setting_get $app overwrite_infcloud)
overwrite_nginx=$(ynh_app_setting_get $app overwrite_nginx)
overwrite_phpfpm=$(ynh_app_setting_get $app overwrite_phpfpm)

# Optional parameters from config-panel feature
firstdayofweek=$(ynh_app_setting_get $app firstdayofweek)
activeview=$(ynh_app_setting_get $app activeview)
openformmode=$(ynh_app_setting_get $app openformmode)
startofbusiness=$(ynh_app_setting_get $app startofbusiness)
endofbusiness=$(ynh_app_setting_get $app endofbusiness)
defaulteventduration=$(ynh_app_setting_get $app defaulteventduration)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

ynh_app_setting_delete $app unprotected_regex

if [ -d /usr/local/radicale ]
then
	mkdir -p /opt/yunohost
	mv /usr/local/radicale /opt/yunohost/
fi

if [ -z "$version" ]
then
	version=$(grep '\"version\": ' ../manifest.json | cut -d '"' -f 4 | cut -d '~' -f 1)	# Retrieve the version number in the manifest file.
	ynh_app_setting_set $app version "$version"
fi

if [ "$infcloud" = "Yes" ]; then
	ynh_app_setting_set $app infcloud 1	# Fixe infcloud en booléen
	infcloud=1
elif [ "$infcloud" = "No" ]; then
	ynh_app_setting_set $app infcloud 0
	infcloud=0
fi

# If overwrite_logging doesn't exist, create it
if [ -z "$overwrite_logging" ]; then
	overwrite_logging=1
	ynh_app_setting_set $app overwrite_logging $overwrite_logging
fi

# If overwrite_config doesn't exist, create it
if [ -z "$overwrite_config" ]; then
	overwrite_config=1
	ynh_app_setting_set $app overwrite_config $overwrite_config
fi

# If overwrite_infcloud doesn't exist, create it
if [ -z "$overwrite_infcloud" ]; then
	overwrite_infcloud=1
	ynh_app_setting_set $app overwrite_infcloud $overwrite_infcloud
fi

# If overwrite_nginx doesn't exist, create it
if [ -z "$overwrite_nginx" ]; then
	overwrite_nginx=1
	ynh_app_setting_set $app overwrite_nginx $overwrite_nginx
fi

# If overwrite_phpfpm doesn't exist, create it
if [ -z "$overwrite_phpfpm" ]; then
	overwrite_phpfpm=1
	ynh_app_setting_set $app overwrite_phpfpm $overwrite_phpfpm
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

if [ $infcloud -eq 1 ]; then
	path_url=$(echo $path_url | sed "s@/infcloud@@")	# Retire /infcloud pour traiter le path seul.
fi
path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.

#=================================================
# ACTIVATE MAINTENANCE MODE
#=================================================

ynh_maintenance_mode_ON

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# NGINX CONFIGURATION
#=================================================

# Overwrite the nginx configuration only if it's allowed
if [ $overwrite_nginx -eq 1 ]
then
	ynh_add_nginx_config
	if [ $infcloud -eq 1 ]
	then	# Ajoute InfCloud dans la config Nginx
		ynh_replace_string "#INFCLOUD#" "" /etc/nginx/conf.d/$domain.d/$app.conf
	fi
	ynh_store_file_checksum "$finalnginxconf"
fi

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Create the dedicated user, if not exist

if [ $infcloud -eq 1 ]
then
	#=================================================
	# PHP-FPM CONFIGURATION
	#=================================================

	# Overwrite the php-fpm configuration only if it's allowed
	if [ $overwrite_phpfpm -eq 1 ]
	then
		ynh_add_fpm_config	# Créer le fichier de configuration du pool php-fpm et le configure.
	fi
fi

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPGRADE RADICALE IN ITS VIRTUALENV
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	# Upgrade pip packages
	ynh_secure_remove /opt/yunohost/$app
	virtualenv /opt/yunohost/$app
	version=$(ynh_app_setting_get $app version $version)
	bash -c "source /opt/yunohost/radicale/bin/activate && pip install radicale==$version python-ldap"
fi

#=================================================
# COPY FILES INTO $FINAL_PATH
#=================================================

# Copy files to the right place
mkdir -p $final_path/collections
cp ../conf/radicale.wsgi $final_path
# Copie les fichiers additionnels ou modifiés.
cp -a ../sources/extra_files_radicale/. "$final_path"
# Le fichier regex.py est patché pour corrigé le commit destructeur e807c3d35bea9cfcfcacac83b1b17d748ea15a39 du 3/12/2015 qui arrête la lecture du fichier rights à la première occurence validée.
mv "$final_path/regex.py" /opt/yunohost/$app/lib/python*/site-packages/radicale/rights/regex.py
if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	if [ "$infcloud" = "1" ]
	then	#Instal InfCloud
		final_path_backup=$final_path	# Sauvegarde le contenu de $final_path
		final_path=$final_path/infcloud	# Change final_path pour l'installation de infcloud
		# If overwrite_infcloud is 0, copy the config file, then restore it.
		if [ $overwrite_infcloud -eq 0 ]; then
			cp -a $final_path/config.js ./config.js
		fi
		ynh_setup_source "$final_path"	# Télécharge la source, décompresse et copie dans $final_path
		if [ $overwrite_infcloud -eq 0 ]; then
			mv ./config.js $final_path/config.js
		fi
		final_path=$final_path_backup	# Restaure le contenu de $final_path
	fi
fi

#=================================================
# CONFIGURE RADICALE
#=================================================

# Overwrite the logging config file only if it's allowed
if [ $overwrite_logging -eq 1 ]
then
	ynh_backup_if_checksum_is_different "/etc/$app/logging"	# Créé un backup du fichier de config si il a été modifié.
	cp ../conf/logging /etc/$app/
	ynh_store_file_checksum "/etc/$app/logging"	# Réenregistre la somme de contrôle du fichier de config
fi

# Overwrite the config file only if it's allowed
if [ $overwrite_config -eq 1 ]
then
	ynh_backup_if_checksum_is_different "/etc/$app/config"	# Créé un backup du fichier de config si il a été modifié.
	cp ../conf/config /etc/$app/
	ynh_replace_string "__PATH__" "${path_url%/}" /etc/$app/config
	ynh_replace_string "__FINALPATH__" "$final_path" /etc/$app/config
	ynh_store_file_checksum "/etc/$app/config"	# Réenregistre la somme de contrôle du fichier de config
fi

# Overwrite the InfCloud config file only if it's allowed
if [ $overwrite_infcloud -eq 1 ]
then
	if [ $infcloud -eq 1 ]
	then	#Configuration InfCloud
		# Détermine la langue
		case "$language" in
			"Czech") language="cs_CZ"
			;;
			"Danish") language="da_DK"
			;;
			"German") language="de_DE"
			;;
			"English/US") language="en_US"
			;;
			"Spanish") language="es_ES"
			;;
			"French") language="fr_FR"
			;;
			"Italian") language="it_IT"
			;;
			"Japan") language="ja_JP"
			;;
			"Hungarian") language="hu_HU"
			;;
			"Dutch") language="nl_NL"
			;;
			"Slovak") language="sk_SK"
			;;
			"Turkish") language="tr_TR"
			;;
			"Russian") language="ru_RU"
			;;
			"Ukrainian") language="uk_UA"
			;;
			"Chinese") language="zh_CN"
			;;
		esac
		ynh_app_setting_set $app language $language
		ynh_backup_if_checksum_is_different "$final_path/infcloud/config.js"	# Créé un backup du fichier de config si il a été modifié.
		cp ../conf/config.js "$final_path/infcloud/"
		ynh_replace_string "__DOMAIN__" "$domain" "$final_path/infcloud/config.js"
		ynh_replace_string "__PATH__" "${path_url%/}" "$final_path/infcloud/config.js"
		ynh_replace_string "__LANG__" "$language" "$final_path/infcloud/config.js"
		ynh_replace_string "__ADMIN__" "$admin" "$final_path/infcloud/config.js"
		ynh_replace_string "__TIMEZONE__" "$(cat /etc/timezone)" "$final_path/infcloud/config.js"

		# Optional parameters from config-panel feature
		if [ -n "$firstdayofweek" ]; then
			ynh_replace_string "\(^var globalDatepickerFirstDayOfWeek=\).*" "\1$firstdayofweek;" "$final_path/infcloud/config.js"
		fi
		if [ -n "$activeview" ]; then
			ynh_replace_string "\(^var globalActiveView=\).*" "\1\'$activeview\';" "$final_path/infcloud/config.js"
		fi
		if [ -n "$openformmode" ]; then
			ynh_replace_string "\(^var globalOpenFormMode=\).*" "\1\'$openformmode\';" "$final_path/infcloud/config.js"
		fi
		if [ -n "$startofbusiness" ]; then
			ynh_replace_string "\(^var globalCalendarStartOfBusiness=\).*" "\1$startofbusiness;" "$final_path/infcloud/config.js"
		fi
		if [ -n "$endofbusiness" ]; then
			ynh_replace_string "\(^var globalCalendarEndOfBusiness=\).*" "\1$endofbusiness;" "$final_path/infcloud/config.js"
		fi
		if [ -n "$defaulteventduration" ]; then
			ynh_replace_string "\(^var globalDefaultEventDuration=\).*" "\1$defaulteventduration;" "$final_path/infcloud/config.js"
		fi
		ynh_store_file_checksum "$final_path/infcloud/config.js"	# Réenregistre la somme de contrôle du fichier de config
	fi
fi

#=================================================
# SET PERMISSIONS ON RADICALE'S DIRECTORIES
#=================================================

chown radicale: -R /opt/yunohost/$app

# Fix permission
chmod 755 /etc/$app/
find /opt/yunohost/$app/ -type d -exec chmod 2755 {} \;
find /opt/yunohost/$app/ -type f -exec chmod g+r,o+r {} \;
chmod 644 /etc/$app/*
chown -R radicale: $final_path
mkdir -p /var/log/$app
touch /var/log/$app/$app.log
chown radicale -R /var/log/$app
# Droit par défaut des dossiers de collections utilisateurs, tels qu'ils sont créés par radicale.
chmod 666 -R $final_path/default_collections
chmod 777 $final_path/default_collections $final_path/default_collections/USER

#=================================================
# CONFIGURE UWSGI FOR RADICALE
#=================================================

cp ../conf/radicale.ini /etc/uwsgi/apps-available/

#=================================================
# RESTART UWSGI
#=================================================

ynh_system_reload --service_name=uwsgi --action=restart

#=================================================
# PREPARE THE HOOKS
#=================================================

# Modification des hook pour la création des collections par défaut des nouveaux utilisateurs. Et leur suppression
ynh_replace_string "__FINALPATH__" "$final_path" ../hooks/post_user_create
ynh_replace_string "__FINALPATH__" "$final_path" ../hooks/post_user_delete

#=================================================
# SETUP LOGROTATE
#=================================================

ynh_use_logrotate --non-append

#=================================================
# GENERIC FINALISATION
#=================================================
# SETUP SSOWAT
#=================================================

if [ $infcloud -eq 1 ]
then	# /infcloud vient se rajouter à l'adresse de radicale pour y être associé sur le portail.
	ynh_app_setting_set $app path ${path_url%/}/infcloud	# Remplace radicale par InfCloud dans le portail Yunohost
	ynh_app_setting_set $app protected_uris "/"	# Protège l'accès à infcloud
	domain_regex=$(echo "$domain" | sed 's@-@.@g')
	ynh_app_setting_set $app skipped_regex "$domain_regex$path_url"	# Radicale est accessible librement (pour l'accès distant aux ressources)
else	# Si seul radicale est installé.
	ynh_app_setting_set $app unprotected_uris "/"	# Radicale est accessible librement (pour l'accès distant aux ressources)
fi

#=================================================
# RELOAD NGINX
#=================================================

ynh_system_reload --service_name=nginx

#=================================================
# DEACTIVE MAINTENANCE MODE
#=================================================

ynh_maintenance_mode_OFF
